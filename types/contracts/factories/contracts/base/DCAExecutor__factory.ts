/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DCAExecutor,
  DCAExecutorInterface,
  IDCADataStructures,
} from "../../../contracts/base/DCAExecutor";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "feeDistrobution_",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "executionEOA_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ContractIsPaused",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "active_",
        type: "bool",
      },
    ],
    name: "ContractActiveStateChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "ExecutedStrategy",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newAddress_",
        type: "address",
      },
    ],
    name: "ExecutorAddressChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "FeeDataChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "FeesDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "DCAAccountAddress_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IDCADataStructures.Interval",
        name: "strategyInterval_",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "active_",
        type: "bool",
      },
    ],
    name: "StrategySubscription",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
    ],
    name: "DistributeFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccount_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "Execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccount_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "ForceUnsubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokenData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokenData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "reinvestData",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "investCode",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "dcaAccountAddress",
                type: "address",
              },
            ],
            internalType: "struct IDCADataStructures.Reinvest",
            name: "reinvest",
            type: "tuple",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "strategy_",
        type: "tuple",
      },
    ],
    name: "Subscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccountAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "Unsubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin_",
        type: "address",
      },
    ],
    name: "addAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "executorAddress_",
        type: "address",
      },
    ],
    name: "changeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addressToCheck_",
        type: "address",
      },
    ],
    name: "checkIfAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getActiveExecutorAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getExecutorAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFeeData",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "interval_",
        type: "uint8",
      },
    ],
    name: "getIntervalTotalActiveStrategys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dcaAccountAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "accountStrategyId_",
        type: "uint256",
      },
    ],
    name: "getSpecificStrategy",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokenData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokenData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "reinvestData",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "investCode",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "dcaAccountAddress",
                type: "address",
              },
            ],
            internalType: "struct IDCADataStructures.Reinvest",
            name: "reinvest",
            type: "tuple",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "getTimeTillWindow",
    outputs: [
      {
        internalType: "uint256",
        name: "lastEx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "secondsLeft",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "checkReturn",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalActiveStrategys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalExecutions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "interval_",
        type: "uint8",
      },
    ],
    name: "isIntervalActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldAdmin_",
        type: "address",
      },
    ],
    name: "removeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newFlag_",
        type: "bool",
      },
    ],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "fee_",
        type: "tuple",
      },
    ],
    name: "setFeeData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "interval_",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "status_",
        type: "bool",
      },
    ],
    name: "setIntervalActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526002805460ff60a01b1916600160a01b1790553480156200002457600080fd5b50604051620033053803806200330583398101604081905262000047916200034b565b338181806200007157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6200007c816200009e565b506200008881620000ee565b506200009690508262000138565b50506200046e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600280546001600160a01b0319166001600160a01b0383169081179091556040517f7d5b70f43ce014e6429a5a008d4a39b49e0d74afc4eec87d6ecf23bee44a6f5090600090a250565b62000142620002b4565b6200014d81620002e5565b620001c3576040805162461bcd60e51b81526020600482015260248101919091527f4443414578656375746f72203a205b736574466565446174615d20546f74616c60448201527f2073706c69742070657263656e747320646f6e277420657175616c2031303025606482015260840162000068565b80516006805460208401516040808601516060870151608088015161ffff97881663ffffffff199096169590951762010000948816949094029390931763ffffffff60201b19166401000000009187169190910261ffff60301b1916176601000000000000959092169490940217600160401b600160e01b031916680100000000000000006001600160a01b03928316021790915560a0830151600780546001600160a01b031990811692841692909217905560c0840151600880549092169216919091179055517f79191c2cedeb094d0c40d3af7d049180bc97b30d8d9b937628db6632e013251b90600090a150565b6000546001600160a01b03163314620002e35760405163118cdaa760e01b815233600482015260240162000068565b565b6020810151815160408301516000929162000300916200043d565b6200030c91906200043d565b61ffff16612710149050919050565b805161ffff811681146200032e57600080fd5b919050565b80516001600160a01b03811681146200032e57600080fd5b6000808284036101008112156200036157600080fd5b60e08112156200037057600080fd5b5060405160e081016001600160401b0381118282101715620003a257634e487b7160e01b600052604160045260246000fd5b604052620003b0846200031b565b8152620003c0602085016200031b565b6020820152620003d3604085016200031b565b6040820152620003e6606085016200031b565b6060820152620003f96080850162000333565b60808201526200040c60a0850162000333565b60a08201526200041f60c0850162000333565b60c082015291506200043460e0840162000333565b90509250929050565b61ffff8181168382160190808211156200046757634e487b7160e01b600052601160045260246000fd5b5092915050565b612e87806200047e6000396000f3fe6080604052600436106101a55760003560e01c8063892cd8f5116100e1578063bfe22a011161008a578063d9fa9c1a11610064578063d9fa9c1a14610646578063f2fde38b1461067f578063f3e8ff5b1461069f578063fd88ed0f146106cc576101f7565b8063bfe22a01146105c9578063c4cf87f0146105e9578063c55cfc7414610609576101f7565b80639665b658116100bb5780639665b65814610569578063a8c2ec0314610589578063ab6319b5146105a9576101f7565b8063892cd8f51461050b57806389c8c5c91461052b5780638da5cb5b1461054b576101f7565b8063350157a81161014e5780635b2fc958116101285780635b2fc9581461049657806370480275146104b6578063715018a6146104d65780637b260087146104eb576101f7565b8063350157a8146104305780633adee794146104625780633c7c46dc14610481576101f7565b80631b29b4fc1161017f5780631b29b4fc1461029657806322f3e2d4146102cb578063256a4935146102fb576101f7565b80630853ac1c1461023f5780631785f53c1461025657806318f1f54d14610276576101f7565b366101f75760405162461bcd60e51b815260206004820152601760248201527f4443414578656375746f72203a205b726563656976655d00000000000000000060448201526064015b60405180910390fd5b60405162461bcd60e51b815260206004820152601860248201527f4443414578656375746f72203a205b66616c6c6261636b5d000000000000000060448201526064016101ee565b34801561024b57600080fd5b506102546106e1565b005b34801561026257600080fd5b506102546102713660046123e6565b6106f5565b34801561028257600080fd5b50610254610291366004612401565b61071e565b3480156102a257600080fd5b506102b66102b136600461243a565b6107e5565b60405190151581526020015b60405180910390f35b3480156102d757600080fd5b5060025474010000000000000000000000000000000000000000900460ff166102b6565b34801561030757600080fd5b506103bd6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810191909152506040805160e08101825260065461ffff8082168352620100008204811660208401526401000000008204811693830193909352660100000000000081049092166060820152680100000000000000009091046001600160a01b039081166080830152600754811660a08301526008541660c082015290565b6040516102c29190600060e08201905061ffff8084511683528060208501511660208401528060408501511660408401528060608501511660608401525060808301516001600160a01b0380821660808501528060a08601511660a08501528060c08601511660c0850152505092915050565b34801561043c57600080fd5b506002546001600160a01b03165b6040516001600160a01b0390911681526020016102c2565b34801561046e57600080fd5b50600b545b6040519081526020016102c2565b34801561048d57600080fd5b50600a54610473565b3480156104a257600080fd5b506102546104b1366004612401565b610828565b3480156104c257600080fd5b506102546104d13660046123e6565b610a5b565b3480156104e257600080fd5b50610254610a8a565b3480156104f757600080fd5b506102546105063660046124c0565b610a9c565b34801561051757600080fd5b50610254610526366004612401565b610c8c565b34801561053757600080fd5b5061047361054636600461243a565b610dc5565b34801561055757600080fd5b506000546001600160a01b031661044a565b34801561057557600080fd5b506102546105843660046123e6565b610e04565b34801561059557600080fd5b506102546105a43660046123e6565b610e18565b3480156105b557600080fd5b506102546105c4366004612570565b610fe6565b3480156105d557600080fd5b506102546105e43660046125c5565b611259565b3480156105f557600080fd5b506102546106043660046125e2565b6112fc565b34801561061557600080fd5b50610629610624366004612401565b6113e1565b6040805193845260208401929092521515908201526060016102c2565b34801561065257600080fd5b506102b66106613660046123e6565b6001600160a01b031660009081526001602052604090205460ff1690565b34801561068b57600080fd5b5061025461069a3660046123e6565b611492565b3480156106ab57600080fd5b506106bf6106ba366004612401565b6114e6565b6040516102c29190612769565b3480156106d857600080fd5b5061044a61181d565b6106e9611836565b6106f3600061187c565b565b6106fd611836565b6001600160a01b03166000908152600160205260409020805460ff19169055565b336001600160a01b038316146107c25760405162461bcd60e51b815260206004820152604160248201527f4443416578656375746f72203a205b556e7375627363726962655d204f6e6c7960448201527f204163636f756e7420436f6e74726163742063616e20756e737562736372696260648201527f6500000000000000000000000000000000000000000000000000000000000000608482015260a4016101ee565b6107cc82826118de565b600a80549060006107dc83612870565b91905055505050565b6000600360008360068111156107fd576107fd6126b2565b600681111561080e5761080e6126b2565b815260208101919091526040016000205460ff1692915050565b6002546001600160a01b031633146108a85760405162461bcd60e51b815260206004820152603860248201527f4f6e6c794578656375746f72203a205b6f6e6c794578656375746f725d20416460448201527f6472657373206973206e6f7420616e206578656375746f72000000000000000060648201526084016101ee565b6001600160a01b038216600090815260046020908152604080832084845290915290206008015460ff166109445760405162461bcd60e51b815260206004820152603c60248201527f4443414578656375746f723a205b466f726365556e7375627363726962655d2060448201527f4163636f756e7420616c726561647920756e737562736372696265640000000060648201526084016101ee565b6001600160a01b038216600081815260046020818152604080842086855290915291829020600801805460ff1916905590517f0283e5fa000000000000000000000000000000000000000000000000000000008152908101839052630283e5fa90602401600060405180830381600087803b1580156109c257600080fd5b505af11580156109d6573d6000803e3d6000fd5b5050600a80549250905060006109eb83612870565b90915550506001600160a01b03821660008181526004602090815260408083208584529091528082206005015490519192849290917f819287b2b7cff41aee38a60c1c803e9ced77b974378cf876e7a3451c1a56a92191610a4f9160ff16906128a5565b60405180910390a45050565b610a63611836565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b610a92611836565b6106f36000611cd3565b610aa4611836565b610aad81611d3b565b610b21576040805162461bcd60e51b81526020600482015260248101919091527f4443414578656375746f72203a205b736574466565446174615d20546f74616c60448201527f2073706c69742070657263656e747320646f6e277420657175616c203130302560648201526084016101ee565b80516006805460208401516040808601516060870151608088015161ffff9788167fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000909616959095176201000094881694909402939093177fffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff16640100000000918716919091027fffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffff161766010000000000009590921694909402177fffffffff0000000000000000000000000000000000000000ffffffffffffffff16680100000000000000006001600160a01b03928316021790915560a0830151600780547fffffffffffffffffffffffff000000000000000000000000000000000000000090811692841692909217905560c0840151600880549092169216919091179055517f79191c2cedeb094d0c40d3af7d049180bc97b30d8d9b937628db6632e013251b90600090a150565b6002546001600160a01b03163314610d0c5760405162461bcd60e51b815260206004820152603860248201527f4f6e6c794578656375746f72203a205b6f6e6c794578656375746f725d20416460448201527f6472657373206973206e6f7420616e206578656375746f72000000000000000060648201526084016101ee565b60025474010000000000000000000000000000000000000000900460ff16610d60576040517f6d39fcd000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610d6c8383611d6d565b90508015610dc05760405182906001600160a01b038516907fb89af9bc8aa44a0bb15ecf17cc88021e8a65196963bed8e33aa51c08b1eca0ef90600090a3600b8054906000610dba836128b3565b91905055505b505050565b600060096000836006811115610ddd57610ddd6126b2565b6006811115610dee57610dee6126b2565b8152602001908152602001600020549050919050565b610e0c611836565b610e158161187c565b50565b3360009081526001602052604090205460ff1680610e4057506000546001600160a01b031633145b610eb25760405162461bcd60e51b815260206004820152603060248201527f4f6e6c7941646d696e203a205b6f6e6c7941646d696e735d204164647265737360448201527f206973206e6f7420616e2061646d696e0000000000000000000000000000000060648201526084016101ee565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610f14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3891906128eb565b90508015610dc05760008080610f4f600685611e43565b6006549295509093509150610f7a906801000000000000000090046001600160a01b03168487611e97565b600754610f91906001600160a01b03168387611e97565b600854610fa8906001600160a01b03168287611e97565b60405184906001600160a01b038816907f63be20cc905d5ba0cf65db405c4999f99f2575e521875f13a8009d6eed7a09d990600090a3505050505050565b60025474010000000000000000000000000000000000000000900460ff1661103a576040517f6d39fcd000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61104760208201826123e6565b6001600160a01b0316336001600160a01b0316146110cd5760405162461bcd60e51b815260206004820152603f60248201527f4443416578656375746f72203a205b5375627363726962655d204f6e6c79204160448201527f63636f756e7420436f6e74726163742063616e20756e7375627363726962650060648201526084016101ee565b6110de6110d982612af2565b611f29565b6111505760405162461bcd60e51b815260206004820152602a60248201527f4443416578656375746f72203a205b5375627363726962655d20496e76616c6960448201527f642073747261746567790000000000000000000000000000000000000000000060648201526084016101ee565b6111636102b1608083016060840161243a565b6111d55760405162461bcd60e51b815260206004820152602d60248201527f4443416578656375746f72203a205b5375627363726962655d20496e7465727660448201527f616c204e6f74204163746976650000000000000000000000000000000000000060648201526084016101ee565b6111e66111e182612af2565b611f95565b600a80549060006111f6836128b3565b90915550600990506000611210608084016060850161243a565b6006811115611221576112216126b2565b6006811115611232576112326126b2565b81526020019081526020016000206000815480929190611251906128b3565b919050555050565b3360009081526001602052604090205460ff168061128157506000546001600160a01b031633145b6112f35760405162461bcd60e51b815260206004820152603060248201527f4f6e6c7941646d696e203a205b6f6e6c7941646d696e735d204164647265737360448201527f206973206e6f7420616e2061646d696e0000000000000000000000000000000060648201526084016101ee565b610e1581612252565b3360009081526001602052604090205460ff168061132457506000546001600160a01b031633145b6113965760405162461bcd60e51b815260206004820152603060248201527f4f6e6c7941646d696e203a205b6f6e6c7941646d696e735d204164647265737360448201527f206973206e6f7420616e2061646d696e0000000000000000000000000000000060648201526084016101ee565b80600360008460068111156113ad576113ad6126b2565b60068111156113be576113be6126b2565b81526020810191909152604001600020805460ff19169115159190911790555050565b6001600160a01b0382811660009081526004602081815260408084208685529091528083205490517f3887d28b000000000000000000000000000000000000000000000000000000008152918201859052919283928392911690633887d28b90602401606060405180830381865afa158015611461573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114859190612bcc565b9250925092509250925092565b61149a611836565b6001600160a01b0381166114dd576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016101ee565b610e1581611cd3565b6114ee6122fb565b6001600160a01b038381166000908152600460209081526040808320868452825291829020825161010081018452815485168152835160608101855260018301805496871682527401000000000000000000000000000000000000000090960460ff168185015260028301805492969395948701949193929184019161157390612c05565b80601f016020809104026020016040519081016040528092919081815260200182805461159f90612c05565b80156115ec5780601f106115c1576101008083540402835291602001916115ec565b820191906000526020600020905b8154815290600101906020018083116115cf57829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b038116835274010000000000000000000000000000000000000000900460ff16602080840191909152600486018054919095019492939192918401919061165590612c05565b80601f016020809104026020016040519081016040528092919081815260200182805461168190612c05565b80156116ce5780601f106116a3576101008083540402835291602001916116ce565b820191906000526020600020905b8154815290600101906020018083116116b157829003601f168201915b505050919092525050508152600582015460209091019060ff1660068111156116f9576116f96126b2565b600681111561170a5761170a6126b2565b815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff161515151581526020016009820160405180608001604052908160008201805461175d90612c05565b80601f016020809104026020016040519081016040528092919081815260200182805461178990612c05565b80156117d65780601f106117ab576101008083540402835291602001916117d6565b820191906000526020600020905b8154815290600101906020018083116117b957829003601f168201915b50505091835250506001919091015460ff8082161515602084015261010082041660408301526201000090046001600160a01b031660609091015290525090505b92915050565b60006118316002546001600160a01b031690565b905090565b6000546001600160a01b031633146106f3576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016101ee565b600280547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040517f7d5b70f43ce014e6429a5a008d4a39b49e0d74afc4eec87d6ecf23bee44a6f5090600090a250565b6001600160a01b0382811660009081526004602090815260408083208584528252808320815161010081018352815486168152825160608101845260018301805497881682527401000000000000000000000000000000000000000090970460ff168186015260028301805496979296939587019491939184019161196290612c05565b80601f016020809104026020016040519081016040528092919081815260200182805461198e90612c05565b80156119db5780601f106119b0576101008083540402835291602001916119db565b820191906000526020600020905b8154815290600101906020018083116119be57829003601f168201915b505050919092525050508152604080516060810182526003840180546001600160a01b038116835274010000000000000000000000000000000000000000900460ff166020808401919091526004860180549190950194929391929184019190611a4490612c05565b80601f0160208091040260200160405190810160405280929190818152602001828054611a7090612c05565b8015611abd5780601f10611a9257610100808354040283529160200191611abd565b820191906000526020600020905b815481529060010190602001808311611aa057829003601f168201915b505050919092525050508152600582015460209091019060ff166006811115611ae857611ae86126b2565b6006811115611af957611af96126b2565b815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff1615151515815260200160098201604051806080016040529081600082018054611b4c90612c05565b80601f0160208091040260200160405190810160405280929190818152602001828054611b7890612c05565b8015611bc55780601f10611b9a57610100808354040283529160200191611bc5565b820191906000526020600020905b815481529060010190602001808311611ba857829003601f168201915b50505091835250506001919091015460ff808216151560208085019190915261010083049091166040808501919091526001600160a01b03620100009093048316606094850152939094528816600090815260048452828120888252909352908220600801805460ff191690558301519293506009929091506006811115611c4f57611c4f6126b2565b6006811115611c6057611c606126b2565b81526020019081526020016000206000815480929190611c7f90612870565b91905055506000151582846001600160a01b03167f819287b2b7cff41aee38a60c1c803e9ced77b974378cf876e7a3451c1a56a9218460600151604051611cc691906128a5565b60405180910390a4505050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60208101518151604083015160009291611d5491612c58565b611d5e9190612c58565b61ffff16612710149050919050565b6006546040517fca4c8b3100000000000000000000000000000000000000000000000000000000815260048101839052660100000000000090910461ffff16602482015260009081906001600160a01b0385169063ca4c8b31906044016020604051808303816000875af1158015611de9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e0d9190612c7a565b90508015611e3c576001600160a01b038416600090815260056020908152604080832086845290915290204390555b9392505050565b815460009081908190611e5a9061ffff16856122c7565b8554909350611e739062010000900461ffff16856122c7565b8554909250611e8e90640100000000900461ffff16856122c7565b90509250925092565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301526024820184905282169063a9059cbb906044016020604051808303816000875af1158015611eff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f239190612c7a565b50505050565b6000806006905060008184606001516006811115611f4957611f496126b2565b855191101591506001600160a01b031615801590611f7457506020840151516001600160a01b031615155b8015611f84575060008460800151115b8015611f8d5750805b949350505050565b600160c0820181905281516001600160a01b03908116600090815260046020908152604080832060a08701518452825291829020855181549085167fffffffffffffffffffffffff000000000000000000000000000000000000000090911617815581860151805195820180549382015160ff1674010000000000000000000000000000000000000000027fffffffffffffffffffffff0000000000000000000000000000000000000000009094169690951695909517919091178355908301518493919290600284019061206a9082612ce5565b5050506040828101518051600384018054602084015160ff1674010000000000000000000000000000000000000000027fffffffffffffffffffffff0000000000000000000000000000000000000000009091166001600160a01b03909316929092179190911781559181015190919060048401906120e99082612ce5565b505050606082015160058201805460ff1916600183600681111561210f5761210f6126b2565b02179055506080820151600682015560a0820151600782015560c082015160088201805460ff191691151591909117905560e08201518051600983019081906121589082612ce5565b506020820151600191820180546040808601516060968701517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00009093169415157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169490941761010060ff90951694909402939093177fffffffffffffffffffff0000000000000000000000000000000000000000ffff16620100006001600160a01b03928316021790915560a08701518751948801519251939650945092909216917f819287b2b7cff41aee38a60c1c803e9ced77b974378cf876e7a3451c1a56a9219161224791906128a5565b60405180910390a450565b600280547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000831515908102919091179091556040517fbdf1a3ee1d5eb15aa60ae1a81488107759732ead44999c8c807575100def058b90600090a250565b600060018361ffff1610156122de57506000611817565b60006127106122f161ffff861685612dff565b611f8d9190612e16565b60405180610100016040528060006001600160a01b03168152602001612347604051806060016040528060006001600160a01b03168152602001600060ff168152602001606081525090565b8152604080516060808201835260008083526020838101919091529282015291019081526020016000815260200160008152602001600081526020016000151581526020016123c5604051806080016040528060608152602001600015158152602001600060ff16815260200160006001600160a01b031681525090565b905290565b80356001600160a01b03811681146123e157600080fd5b919050565b6000602082840312156123f857600080fd5b611e3c826123ca565b6000806040838503121561241457600080fd5b61241d836123ca565b946020939093013593505050565b8035600781106123e157600080fd5b60006020828403121561244c57600080fd5b611e3c8261242b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff811182821017156124a8576124a8612455565b60405290565b803561ffff811681146123e157600080fd5b600060e082840312156124d257600080fd5b60405160e0810181811067ffffffffffffffff821117156124f5576124f5612455565b604052612501836124ae565b815261250f602084016124ae565b6020820152612520604084016124ae565b6040820152612531606084016124ae565b6060820152612542608084016123ca565b608082015261255360a084016123ca565b60a082015261256460c084016123ca565b60c08201529392505050565b60006020828403121561258257600080fd5b813567ffffffffffffffff81111561259957600080fd5b82016101008185031215611e3c57600080fd5b8015158114610e1557600080fd5b80356123e1816125ac565b6000602082840312156125d757600080fd5b8135611e3c816125ac565b600080604083850312156125f557600080fd5b6125fe8361242b565b9150602083013561260e816125ac565b809150509250929050565b6000815180845260005b8181101561263f57602081850181015186830182015201612623565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6001600160a01b03815116825260ff60208201511660208301526000604082015160606040850152611f8d6060850182612619565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60078110612718577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b60008151608084526127316080850182612619565b905060208301511515602085015260ff60408401511660408501526001600160a01b0360608401511660608501528091505092915050565b602081526127836020820183516001600160a01b03169052565b600060208301516101008060408501526127a161012085018361267d565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0808685030160608701526127dd848361267d565b9350606087015191506127f360808701836126e1565b608087015160a087015260a087015160c087015260c0870151915061281c60e087018315159052565b60e0870151915080868503018387015250612837838261271c565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008161287f5761287f612841565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b6020810161181782846126e1565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036128e4576128e4612841565b5060010190565b6000602082840312156128fd57600080fd5b5051919050565b803560ff811681146123e157600080fd5b600067ffffffffffffffff8084111561293057612930612455565b604051601f85017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561297657612976612455565b8160405280935085815286868601111561298f57600080fd5b858560208301376000602087830101525050509392505050565b6000606082840312156129bb57600080fd5b6040516060810167ffffffffffffffff82821081831117156129df576129df612455565b816040528293506129ef856123ca565b83526129fd60208601612904565b60208401526040850135915080821115612a1657600080fd5b508301601f81018513612a2857600080fd5b612a3785823560208401612915565b6040830152505092915050565b600060808284031215612a5657600080fd5b6040516080810167ffffffffffffffff8282108183111715612a7a57612a7a612455565b816040528293508435915080821115612a9257600080fd5b508301601f81018513612aa457600080fd5b612ab385823560208401612915565b8252506020830135612ac4816125ac565b6020820152612ad560408401612904565b6040820152612ae6606084016123ca565b60608201525092915050565b60006101008236031215612b0557600080fd5b612b0d612484565b612b16836123ca565b8152602083013567ffffffffffffffff80821115612b3357600080fd5b612b3f368387016129a9565b60208401526040850135915080821115612b5857600080fd5b612b64368387016129a9565b6040840152612b756060860161242b565b60608401526080850135608084015260a085013560a0840152612b9a60c086016125ba565b60c084015260e0850135915080821115612bb357600080fd5b50612bc036828601612a44565b60e08301525092915050565b600080600060608486031215612be157600080fd5b83519250602084015191506040840151612bfa816125ac565b809150509250925092565b600181811c90821680612c1957607f821691505b602082108103612c52577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b61ffff818116838216019080821115612c7357612c73612841565b5092915050565b600060208284031215612c8c57600080fd5b8151611e3c816125ac565b601f821115610dc057600081815260208120601f850160051c81016020861015612cbe5750805b601f850160051c820191505b81811015612cdd57828155600101612cca565b505050505050565b815167ffffffffffffffff811115612cff57612cff612455565b612d1381612d0d8454612c05565b84612c97565b602080601f831160018114612d665760008415612d305750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555612cdd565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015612db357888601518255948401946001909101908401612d94565b5085821015612def57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b808202811582820484141761181757611817612841565b600082612e4c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea26469706673582212207fe35b68a776881bee93b58f9a247124435aa230ac7a9e2b63333085072694a764736f6c63430008140033";

type DCAExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DCAExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DCAExecutor__factory extends ContractFactory {
  constructor(...args: DCAExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    );
  }
  override deploy(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      feeDistrobution_,
      executionEOA_,
      overrides || {}
    ) as Promise<
      DCAExecutor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DCAExecutor__factory {
    return super.connect(runner) as DCAExecutor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCAExecutorInterface {
    return new Interface(_abi) as DCAExecutorInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DCAExecutor {
    return new Contract(address, _abi, runner) as unknown as DCAExecutor;
  }
}
