/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DCAExecutor,
  DCAExecutorInterface,
  IDCADataStructures,
} from "../../../contracts/base/DCAExecutor";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "feeDistrobution_",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "executionEOA_",
        type: "address",
      },
      {
        internalType: "address",
        name: "swapRouter_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ContractIsPaused",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "NotAllowedBaseToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "allowed_",
        type: "bool",
      },
    ],
    name: "BaseTokenAllowanceChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "active_",
        type: "bool",
      },
    ],
    name: "ContractActiveStateChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "ExecutedStrategy",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newAddress_",
        type: "address",
      },
    ],
    name: "ExecutorAddressChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "FeeDataChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "FeesDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "DCAAccountAddress_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IDCADataStructures.Interval",
        name: "strategyInterval_",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "active_",
        type: "bool",
      },
    ],
    name: "StrategySubscription",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
    ],
    name: "DistributeFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccount_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "interval_",
        type: "uint8",
      },
    ],
    name: "Execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccount_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "interval_",
        type: "uint8",
      },
    ],
    name: "ForceUnsubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "SWAP_ROUTER",
    outputs: [
      {
        internalType: "contract ISwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokenData",
            name: "baseToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "ticker",
                type: "string",
              },
            ],
            internalType: "struct IDCADataStructures.TokenData",
            name: "targetToken",
            type: "tuple",
          },
          {
            internalType: "enum IDCADataStructures.Interval",
            name: "interval",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "reinvestData",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "investCode",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "dcaAccountAddress",
                type: "address",
              },
            ],
            internalType: "struct IDCADataStructures.Reinvest",
            name: "reinvest",
            type: "tuple",
          },
        ],
        internalType: "struct IDCADataStructures.Strategy",
        name: "strategy_",
        type: "tuple",
      },
    ],
    name: "Subscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "DCAAccountAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "interval_",
        type: "uint8",
      },
    ],
    name: "Unsubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin_",
        type: "address",
      },
    ],
    name: "addAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "executorAddress_",
        type: "address",
      },
    ],
    name: "changeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addressToCheck_",
        type: "address",
      },
    ],
    name: "checkIfAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getExecutorAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFeeData",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "interval_",
        type: "uint8",
      },
    ],
    name: "getIntervalTotalActiveStrategies",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strategyId_",
        type: "uint256",
      },
    ],
    name: "getTimeTillWindow",
    outputs: [
      {
        internalType: "uint256",
        name: "lastEx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "secondsLeft",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "checkReturn",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalActiveStrategys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalExecutions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "interval_",
        type: "uint8",
      },
    ],
    name: "isIntervalActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "isTokenAllowedAsBase",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldAdmin_",
        type: "address",
      },
    ],
    name: "removeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newFlag_",
        type: "bool",
      },
    ],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "bool",
        name: "allowed_",
        type: "bool",
      },
    ],
    name: "setBaseTokenAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "amountToExecutor",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToComputing",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "amountToAdmin",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "feeAmount",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "executionAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "computingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.FeeDistribution",
        name: "fee_",
        type: "tuple",
      },
    ],
    name: "setFeeData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IDCADataStructures.Interval",
        name: "interval_",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "status_",
        type: "bool",
      },
    ],
    name: "setIntervalActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526000805461017760a31b62ffffff60a01b199091161790556003805460ff60a01b1916600160a01b1790553480156200003c57600080fd5b5060405162003286380380620032868339810160408190526200005f9162000381565b600080546001600160a01b0319166001600160a01b03831617905533828180620000a457604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620000af81620000d2565b50620000bb8162000124565b50620000c99050836200016e565b505050620004b7565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600380546001600160a01b0319166001600160a01b0383169081179091556040517f7d5b70f43ce014e6429a5a008d4a39b49e0d74afc4eec87d6ecf23bee44a6f5090600090a250565b62000178620002ea565b62000183816200031b565b620001f9576040805162461bcd60e51b81526020600482015260248101919091527f4443414578656375746f72203a205b736574466565446174615d20546f74616c60448201527f2073706c69742070657263656e747320646f6e277420657175616c203130302560648201526084016200009b565b80516009805460208401516040808601516060870151608088015161ffff97881663ffffffff199096169590951762010000948816949094029390931763ffffffff60201b19166401000000009187169190910261ffff60301b1916176601000000000000959092169490940217600160401b600160e01b031916680100000000000000006001600160a01b03928316021790915560a0830151600a80546001600160a01b031990811692841692909217905560c0840151600b80549092169216919091179055517f79191c2cedeb094d0c40d3af7d049180bc97b30d8d9b937628db6632e013251b90600090a150565b6001546001600160a01b03163314620003195760405163118cdaa760e01b81523360048201526024016200009b565b565b60208101518151604083015160009291620003369162000486565b62000342919062000486565b61ffff16612710149050919050565b805161ffff811681146200036457600080fd5b919050565b80516001600160a01b03811681146200036457600080fd5b60008060008385036101208112156200039957600080fd5b60e0811215620003a857600080fd5b5060405160e081016001600160401b0381118282101715620003da57634e487b7160e01b600052604160045260246000fd5b604052620003e88562000351565b8152620003f86020860162000351565b60208201526200040b6040860162000351565b60408201526200041e6060860162000351565b6060820152620004316080860162000369565b60808201526200044460a0860162000369565b60a08201526200045760c0860162000369565b60c082015292506200046c60e0850162000369565b91506200047d610100850162000369565b90509250925092565b61ffff818116838216019080821115620004b057634e487b7160e01b600052601160045260246000fd5b5092915050565b612dbf80620004c76000396000f3fe6080604052600436106101b05760003560e01c80637b260087116100ec578063bfe22a011161008a578063c600589311610064578063c60058931461066c578063c7ba6a001461068c578063d9fa9c1a146106ac578063f2fde38b146106e5576101f5565b8063bfe22a01146105ef578063c4cf87f01461060f578063c55cfc741461062f576101f5565b80639665b658116100c65780639665b65814610556578063a8c2ec0314610576578063ab6319b514610596578063b572a3c9146105b6576101f5565b80637b260087146104f857806386bbc384146105185780638da5cb5b14610538576101f5565b8063350157a811610159578063435727471161013357806343572747146104835780636745b3e1146104a357806370480275146104c3578063715018a6146104e3576101f5565b8063350157a8146104225780633adee7941461044f5780633c7c46dc1461046e576101f5565b80631b29b4fc1161018a5780631b29b4fc1461028857806322f3e2d4146102bd578063256a4935146102ed576101f5565b80630853ac1c146102335780631785f53c146102485780631a4230e714610268576101f5565b366101f5576101f36040518060400160405280601781526020017f4443414578656375746f72203a205b726563656976655d000000000000000000815250610705565b005b6101f36040518060400160405280601881526020017f4443414578656375746f72203a205b66616c6c6261636b5d0000000000000000815250610705565b34801561023f57600080fd5b506101f3610797565b34801561025457600080fd5b506101f361026336600461254d565b6107ab565b34801561027457600080fd5b506101f3610283366004612583565b6107d4565b34801561029457600080fd5b506102a86102a33660046125cb565b6108d6565b60405190151581526020015b60405180910390f35b3480156102c957600080fd5b5060035474010000000000000000000000000000000000000000900460ff166102a8565b3480156102f957600080fd5b506103af6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810191909152506040805160e08101825260095461ffff8082168352620100008204811660208401526401000000008204811693830193909352660100000000000081049092166060820152680100000000000000009091046001600160a01b039081166080830152600a54811660a0830152600b541660c082015290565b6040516102b49190600060e08201905061ffff8084511683528060208501511660208401528060408501511660408401528060608501511660608401525060808301516001600160a01b0380821660808501528060a08601511660a08501528060c08601511660c0850152505092915050565b34801561042e57600080fd5b50610437610919565b6040516001600160a01b0390911681526020016102b4565b34801561045b57600080fd5b50600d545b6040519081526020016102b4565b34801561047a57600080fd5b50600c54610460565b34801561048f57600080fd5b506101f361049e3660046125e6565b610932565b3480156104af57600080fd5b506101f36104be3660046125e6565b610b3f565b3480156104cf57600080fd5b506101f36104de36600461254d565b610c8c565b3480156104ef57600080fd5b506101f3610cb8565b34801561050457600080fd5b506101f3610513366004612686565b610cca565b34801561052457600080fd5b506104606105333660046125cb565b610eba565b34801561054457600080fd5b506001546001600160a01b0316610437565b34801561056257600080fd5b506101f361057136600461254d565b610ef9565b34801561058257600080fd5b506101f361059136600461254d565b610f0a565b3480156105a257600080fd5b506101f36105b136600461273c565b61111e565b3480156105c257600080fd5b506102a86105d136600461254d565b6001600160a01b031660009081526008602052604090205460ff1690565b3480156105fb57600080fd5b506101f361060a366004612778565b61145a565b34801561061b57600080fd5b506101f361062a366004612795565b6114fd565b34801561063b57600080fd5b5061064f61064a3660046127b1565b6115e2565b6040805193845260208401929092521515908201526060016102b4565b34801561067857600080fd5b50600054610437906001600160a01b031681565b34801561069857600080fd5b506101f36106a73660046125e6565b611663565b3480156106b857600080fd5b506102a86106c736600461254d565b6001600160a01b031660009081526002602052604090205460ff1690565b3480156106f157600080fd5b506101f361070036600461254d565b6118fc565b6107948160405160240161071991906127dd565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f41304fac00000000000000000000000000000000000000000000000000000000179052611950565b50565b61079f611959565b6107a9600061199f565b565b6107b3611959565b6001600160a01b03166000908152600260205260409020805460ff19169055565b3360009081526002602052604090205460ff16806107fc57506001546001600160a01b031633145b6108735760405162461bcd60e51b815260206004820152603060248201527f4f6e6c7941646d696e203a205b6f6e6c7941646d696e735d204164647265737360448201527f206973206e6f7420616e2061646d696e0000000000000000000000000000000060648201526084015b60405180910390fd5b6001600160a01b038216600081815260086020908152604091829020805460ff19168515159081179091558251938452908301527fd1f0540938f6c74ef93e6e1ad100a0ff30b046f9c053a43dcb7ba15e59411ee8910160405180910390a15050565b6000600460008360078111156108ee576108ee612849565b60078111156108ff576108ff612849565b815260208101919091526040016000205460ff1692915050565b600061092d6003546001600160a01b031690565b905090565b6003546001600160a01b031633146109b25760405162461bcd60e51b815260206004820152603860248201527f4f6e6c794578656375746f72203a205b6f6e6c794578656375746f725d20416460448201527f6472657373206973206e6f7420616e206578656375746f720000000000000000606482015260840161086a565b6001600160a01b038316600090815260066020908152604080832085845290915290205460ff16610a4b5760405162461bcd60e51b815260206004820152603c60248201527f4443414578656375746f723a205b466f726365556e7375627363726962655d2060448201527f4163636f756e7420616c726561647920756e7375627363726962656400000000606482015260840161086a565b6001600160a01b038316600081815260066020908152604080832086845290915290819020805460ff19169055517f0283e5fa00000000000000000000000000000000000000000000000000000000815260048101849052630283e5fa90602401600060405180830381600087803b158015610ac657600080fd5b505af1158015610ada573d6000803e3d6000fd5b5050600c8054925090506000610aef836128a7565b91905055506000151582846001600160a01b03167f819287b2b7cff41aee38a60c1c803e9ced77b974378cf876e7a3451c1a56a92184604051610b3291906128dc565b60405180910390a4505050565b336001600160a01b03841614610be35760405162461bcd60e51b815260206004820152604160248201527f4443414578656375746f72203a205b556e7375627363726962655d204f6e6c7960448201527f204163636f756e7420436f6e74726163742063616e20756e737562736372696260648201527f6500000000000000000000000000000000000000000000000000000000000000608482015260a40161086a565b6001600160a01b038316600090815260066020908152604080832085845290915290205460ff16610c7c5760405162461bcd60e51b815260206004820152603960248201527f4443414578656375746f72203a205b556e7375627363726962655d205374726160448201527f7465677920616c726561647920756e7375627363726962656400000000000000606482015260840161086a565b610c87838383611a01565b505050565b610c94611959565b6001600160a01b03166000908152600260205260409020805460ff19166001179055565b610cc0611959565b6107a96000611a86565b610cd2611959565b610cdb81611af0565b610d4f576040805162461bcd60e51b81526020600482015260248101919091527f4443414578656375746f72203a205b736574466565446174615d20546f74616c60448201527f2073706c69742070657263656e747320646f6e277420657175616c2031303025606482015260840161086a565b80516009805460208401516040808601516060870151608088015161ffff9788167fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000909616959095176201000094881694909402939093177fffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff16640100000000918716919091027fffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffff161766010000000000009590921694909402177fffffffff0000000000000000000000000000000000000000ffffffffffffffff16680100000000000000006001600160a01b03928316021790915560a0830151600a80547fffffffffffffffffffffffff000000000000000000000000000000000000000090811692841692909217905560c0840151600b80549092169216919091179055517f79191c2cedeb094d0c40d3af7d049180bc97b30d8d9b937628db6632e013251b90600090a150565b600060056000836007811115610ed257610ed2612849565b6007811115610ee357610ee3612849565b8152602001908152602001600020549050919050565b610f01611959565b6107948161199f565b3360009081526002602052604090205460ff1680610f3257506001546001600160a01b031633145b610fa45760405162461bcd60e51b815260206004820152603060248201527f4f6e6c7941646d696e203a205b6f6e6c7941646d696e735d204164647265737360448201527f206973206e6f7420616e2061646d696e00000000000000000000000000000000606482015260840161086a565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015611006573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102a919061291d565b90508015610c875760008080611041600985611b22565b9194509250905082156110a657600061105c87600086611b76565b6009546040519192506801000000000000000090046001600160a01b0316906108fc8315029083906000818181858888f193505050501580156110a3573d6000803e3d6000fd5b50505b81156110c357600a546110c3906001600160a01b03168387611eb7565b80156110e057600b546110e0906001600160a01b03168287611eb7565b60405184906001600160a01b038816907f63be20cc905d5ba0cf65db405c4999f99f2575e521875f13a8009d6eed7a09d990600090a3505050505050565b60035474010000000000000000000000000000000000000000900460ff16611172576040517f6d39fcd000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61118461117e82612b2c565b33611f43565b6111f65760405162461bcd60e51b815260206004820152603f60248201527f4443416578656375746f72203a205b5375627363726962655d204f6e6c79204160448201527f63636f756e7420436f6e74726163742063616e20756e73756273637269626500606482015260840161086a565b61120761120282612b2c565b611f5a565b6112795760405162461bcd60e51b815260206004820152602a60248201527f4443416578656375746f72203a205b5375627363726962655d20496e76616c6960448201527f6420737472617465677900000000000000000000000000000000000000000000606482015260840161086a565b61128c6102a360808301606084016125cb565b6112fe5760405162461bcd60e51b815260206004820152602d60248201527f4443416578656375746f72203a205b5375627363726962655d20496e7465727660448201527f616c204e6f742041637469766500000000000000000000000000000000000000606482015260840161086a565b6006600061130f602084018461254d565b6001600160a01b031681526020808201929092526040908101600090812060a0850135825290925290205460ff16156113b05760405162461bcd60e51b815260206004820152603560248201527f4443416578656375746f72203a205b5375627363726962655d2053747261746560448201527f677920616c726561647920737562736372696265640000000000000000000000606482015260840161086a565b600860006113c16020840184612c06565b6113cf90602081019061254d565b6001600160a01b0316815260208101919091526040016000205460ff16611449576113fd6020820182612c06565b61140b90602081019061254d565b6040517f723cf98f0000000000000000000000000000000000000000000000000000000081526001600160a01b03909116600482015260240161086a565b61079461145582612b2c565b611fc6565b3360009081526002602052604090205460ff168061148257506001546001600160a01b031633145b6114f45760405162461bcd60e51b815260206004820152603060248201527f4f6e6c7941646d696e203a205b6f6e6c7941646d696e735d204164647265737360448201527f206973206e6f7420616e2061646d696e00000000000000000000000000000000606482015260840161086a565b610794816120b0565b3360009081526002602052604090205460ff168061152557506001546001600160a01b031633145b6115975760405162461bcd60e51b815260206004820152603060248201527f4f6e6c7941646d696e203a205b6f6e6c7941646d696e735d204164647265737360448201527f206973206e6f7420616e2061646d696e00000000000000000000000000000000606482015260840161086a565b80600460008460078111156115ae576115ae612849565b60078111156115bf576115bf612849565b81526020810191909152604001600020805460ff19169115159190911790555050565b6000806000846001600160a01b0316633887d28b856040518263ffffffff1660e01b815260040161161591815260200190565b606060405180830381865afa158015611632573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116569190612c44565b9250925092509250925092565b6003546001600160a01b031633146116e35760405162461bcd60e51b815260206004820152603860248201527f4f6e6c794578656375746f72203a205b6f6e6c794578656375746f725d20416460448201527f6472657373206973206e6f7420616e206578656375746f720000000000000000606482015260840161086a565b60035474010000000000000000000000000000000000000000900460ff16611737576040517f6d39fcd000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038316600090815260066020908152604080832085845290915290205460ff166117d05760405162461bcd60e51b815260206004820152602f60248201527f4443414578656375746f72203a205b457865637574655d20537472617465677960448201527f206e6f7420737562736372696265640000000000000000000000000000000000606482015260840161086a565b6117d9816108d6565b61184b5760405162461bcd60e51b815260206004820152602b60248201527f4443414578656375746f72203a205b457865637574655d20496e74657276616c60448201527f204e6f7420416374697665000000000000000000000000000000000000000000606482015260840161086a565b6001600160a01b038316600090815260076020908152604080832085845290915290205461187a908290612125565b6118ec5760405162461bcd60e51b815260206004820152602f60248201527f4443414578656375746f72203a205b457865637574655d204e6f7420696e206560448201527f7865637574696f6e2077696e646f770000000000000000000000000000000000606482015260840161086a565b6118f68383612139565b50505050565b611904611959565b6001600160a01b038116611947576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526000600482015260240161086a565b61079481611a86565b61079481612257565b6001546001600160a01b031633146107a9576040517f118cdaa700000000000000000000000000000000000000000000000000000000815233600482015260240161086a565b600380547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040517f7d5b70f43ce014e6429a5a008d4a39b49e0d74afc4eec87d6ecf23bee44a6f5090600090a250565b600c8054906000611a11836128a7565b90915550506001600160a01b03831660009081526006602090815260408083208584529091528120805460ff19169055600590826007811115611a5657611a56612849565b6007811115611a6757611a67612849565b81526020019081526020016000206000815480929190610aef906128a7565b600180546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60208101518151604083015160009291611b0991612c7d565b611b139190612c7d565b61ffff16612710149050919050565b815460009081908190611b399061ffff1685612278565b8554909350611b529062010000900461ffff1685612278565b8554909250611b6d90640100000000900461ffff1685612278565b90509250925092565b60006001600160a01b038316611d9a576000546040805160e0810182526001600160a01b03878116825282517f4aa4a4fc00000000000000000000000000000000000000000000000000000000815292519316926304e45aaf926020808401928692634aa4a4fc9260048083019391928290030181865afa158015611bff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c239190612c9f565b6001600160a01b031681526000805462ffffff7401000000000000000000000000000000000000000090910416602083015230604080840191909152606083018890526080830182905260a090920152517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b168152611d099190600401600060e0820190506001600160a01b0380845116835280602085015116602084015262ffffff60408501511660408401528060608501511660608401526080840151608084015260a084015160a08401528060c08501511660c08401525092915050565b6020604051808303816000875af1158015611d28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d4c919061291d565b9050611d8c6040518060400160405280601081526020017f5769746864726177696e67205745544800000000000000000000000000000000815250610705565b611d95816122ac565b611eb0565b600080546040805160e0810182526001600160a01b0388811682528781166020830190815262ffffff74010000000000000000000000000000000000000000860481168486019081523060608601908152608086018b815260a087018a815260c088019a8b5297517f04e45aaf000000000000000000000000000000000000000000000000000000008152965186166004880152935185166024870152905190911660448501525182166064840152516084830152915160a48201529251811660c484015216906304e45aaf9060e4016020604051808303816000875af1158015611e89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ead919061291d565b90505b9392505050565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301526024820184905282169063a9059cbb906044016020604051808303816000875af1158015611f1f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118f69190612cbc565b81516001600160a01b038281169116145b92915050565b6000806007905060008184606001516007811115611f7a57611f7a612849565b855191101591506001600160a01b031615801590611fa557506020840151516001600160a01b031615155b8015611fb5575060008460800151115b8015611fbe5750805b949350505050565b80516001600160a01b0316600090815260066020908152604080832060a085015184529091528120805460ff19166001179055600c80549161200783612cd9565b9190505550600560008260600151600781111561202657612026612849565b600781111561203757612037612849565b8152602001908152602001600020600081548092919061205690612cd9565b9190505550600115158160a0015182600001516001600160a01b03167f819287b2b7cff41aee38a60c1c803e9ced77b974378cf876e7a3451c1a56a92184606001516040516120a591906128dc565b60405180910390a450565b600380547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000831515908102919091179091556040517fbdf1a3ee1d5eb15aa60ae1a81488107759732ead44999c8c807575100def058b90600090a250565b60006121318383612383565b159392505050565b6009546040517fca4c8b3100000000000000000000000000000000000000000000000000000000815260048101839052660100000000000090910461ffff16602482015260009081906001600160a01b0385169063ca4c8b31906044016020604051808303816000875af11580156121b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121d99190612cbc565b90508015611eb0576001600160a01b03841660009081526007602090815260408083208684529091528120429055600d80549161221583612cd9565b909155505060405183906001600160a01b038616907fb89af9bc8aa44a0bb15ecf17cc88021e8a65196963bed8e33aa51c08b1eca0ef90600090a39392505050565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b600060018361ffff16101561228f57506000611f54565b60006127106122a261ffff861685612d11565b611fbe9190612d28565b60008054906101000a90046001600160a01b03166001600160a01b0316634aa4a4fc6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156122fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123219190612c9f565b6001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b815260040161234e91815260200190565b600060405180830381600087803b15801561236857600080fd5b505af115801561237c573d6000803e3d6000fd5b5050505050565b60008061238f846123bb565b6123999084612d63565b90508042116123b1576123ac4282612d76565b611fbe565b6000949350505050565b6000808260078111156123d0576123d0612849565b036123dd5750603c919050565b60018260078111156123f1576123f1612849565b0361240257611f54603c6005612d11565b600282600781111561241657612416612849565b03612425575062015180919050565b600382600781111561243957612439612849565b0361244c57611f54620151806002612d11565b600482600781111561246057612460612849565b0361247357611f54620151806003612d11565b600582600781111561248757612487612849565b03612496575062093a80919050565b60068260078111156124aa576124aa612849565b036124bd57611f5462093a806002612d11565b60078260078111156124d1576124d1612849565b036124e057506224ea00919050565b60405162461bcd60e51b815260206004820152601e60248201527f4443415374726174656779203a20496e76616c696420696e74657276616c0000604482015260640161086a565b6001600160a01b038116811461079457600080fd5b803561254881612528565b919050565b60006020828403121561255f57600080fd5b8135611eb081612528565b801515811461079457600080fd5b80356125488161256a565b6000806040838503121561259657600080fd5b82356125a181612528565b915060208301356125b18161256a565b809150509250929050565b80356008811061254857600080fd5b6000602082840312156125dd57600080fd5b611eb0826125bc565b6000806000606084860312156125fb57600080fd5b833561260681612528565b925060208401359150611b6d604085016125bc565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff8111828210171561266e5761266e61261b565b60405290565b803561ffff8116811461254857600080fd5b600060e0828403121561269857600080fd5b60405160e0810181811067ffffffffffffffff821117156126bb576126bb61261b565b6040526126c783612674565b81526126d560208401612674565b60208201526126e660408401612674565b60408201526126f760608401612674565b6060820152608083013561270a81612528565b608082015260a083013561271d81612528565b60a082015260c083013561273081612528565b60c08201529392505050565b60006020828403121561274e57600080fd5b813567ffffffffffffffff81111561276557600080fd5b82016101008185031215611eb057600080fd5b60006020828403121561278a57600080fd5b8135611eb08161256a565b600080604083850312156127a857600080fd5b6125a1836125bc565b600080604083850312156127c457600080fd5b82356127cf81612528565b946020939093013593505050565b600060208083528351808285015260005b8181101561280a578581018301518582016040015282016127ee565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000816128b6576128b6612878565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b6020810160088310612917577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b60006020828403121561292f57600080fd5b5051919050565b803560ff8116811461254857600080fd5b600067ffffffffffffffff808411156129625761296261261b565b604051601f85017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156129a8576129a861261b565b816040528093508581528686860111156129c157600080fd5b858560208301376000602087830101525050509392505050565b6000606082840312156129ed57600080fd5b6040516060810167ffffffffffffffff8282108183111715612a1157612a1161261b565b8160405282935084359150612a2582612528565b818352612a3460208601612936565b60208401526040850135915080821115612a4d57600080fd5b508301601f81018513612a5f57600080fd5b612a6e85823560208401612947565b6040830152505092915050565b600060808284031215612a8d57600080fd5b6040516080810167ffffffffffffffff8282108183111715612ab157612ab161261b565b816040528293508435915080821115612ac957600080fd5b508301601f81018513612adb57600080fd5b612aea85823560208401612947565b8252506020830135612afb8161256a565b6020820152612b0c60408401612936565b60408201526060830135612b1f81612528565b6060919091015292915050565b60006101008236031215612b3f57600080fd5b612b4761264a565b612b508361253d565b8152602083013567ffffffffffffffff80821115612b6d57600080fd5b612b79368387016129db565b60208401526040850135915080821115612b9257600080fd5b612b9e368387016129db565b6040840152612baf606086016125bc565b60608401526080850135608084015260a085013560a0840152612bd460c08601612578565b60c084015260e0850135915080821115612bed57600080fd5b50612bfa36828601612a7b565b60e08301525092915050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa1833603018112612c3a57600080fd5b9190910192915050565b600080600060608486031215612c5957600080fd5b83519250602084015191506040840151612c728161256a565b809150509250925092565b61ffff818116838216019080821115612c9857612c98612878565b5092915050565b600060208284031215612cb157600080fd5b8151611eb081612528565b600060208284031215612cce57600080fd5b8151611eb08161256a565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612d0a57612d0a612878565b5060010190565b8082028115828204841417611f5457611f54612878565b600082612d5e577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b80820180821115611f5457611f54612878565b81810381811115611f5457611f5461287856fea2646970667358221220a0cb5d1aff090053f1d155d2d59c4806b84b16e969b44df44d7622f9ebd50b0164736f6c63430008140033";

type DCAExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DCAExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DCAExecutor__factory extends ContractFactory {
  constructor(...args: DCAExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    swapRouter_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      feeDistrobution_,
      executionEOA_,
      swapRouter_,
      overrides || {}
    );
  }
  override deploy(
    feeDistrobution_: IDCADataStructures.FeeDistributionStruct,
    executionEOA_: AddressLike,
    swapRouter_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      feeDistrobution_,
      executionEOA_,
      swapRouter_,
      overrides || {}
    ) as Promise<
      DCAExecutor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DCAExecutor__factory {
    return super.connect(runner) as DCAExecutor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCAExecutorInterface {
    return new Interface(_abi) as DCAExecutorInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DCAExecutor {
    return new Contract(address, _abi, runner) as unknown as DCAExecutor;
  }
}
