/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DCAReinvest,
  DCAReinvestInterface,
} from "../../../contracts/base/DCAReinvest";

const _abi = [
  {
    inputs: [
      {
        internalType: "bool",
        name: "activeLibrary_",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ContractIsPaused",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "active_",
        type: "bool",
      },
    ],
    name: "ContractActiveStateChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "ACTIVE_REINVESTS",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REINVEST_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "reinvestData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "investCode",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "dcaAccountAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.Reinvest",
        name: "reinvestData_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "executeReinvest",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getActiveModuals",
    outputs: [
      {
        internalType: "uint8[]",
        name: "",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getLibraryVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "code_",
        type: "uint8",
      },
    ],
    name: "getModuleName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setActiveState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "reinvestData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "investCode",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "dcaAccountAddress",
            type: "address",
          },
        ],
        internalType: "struct IDCADataStructures.Reinvest",
        name: "reinvestData_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "unwindReinvest",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000805460ff191660011790553480156200001e57600080fd5b50604051620017113803806200171183398101604081905262000041916200011a565b33806200006857604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000738162000086565b506200007f81620000df565b5062000145565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b6000805460ff1916821515908117825560405190917fbdf1a3ee1d5eb15aa60ae1a81488107759732ead44999c8c807575100def058b91a250565b6000602082840312156200012d57600080fd5b815180151581146200013e57600080fd5b9392505050565b6115bc80620001556000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c80638da5cb5b11610081578063c7b785e81161005b578063c7b785e81461021b578063c9f6d48f1461022e578063f2fde38b146102bb57600080fd5b80638da5cb5b146101b0578063bcb9236e146101f3578063c445d2ea1461020657600080fd5b8063454f002a116100b2578063454f002a14610144578063715018a61461016c578063738800b71461017457600080fd5b80630ca75044146100d957806322f3e2d41461012457806340438aea1461013a575b600080fd5b60408051808201909152600981527f544553542056302e36000000000000000000000000000000000000000000000060208201525b60405161011b9190611124565b60405180910390f35b60005460ff16604051901515815260200161011b565b6101426102d3565b005b610157610152366004611245565b6102f2565b6040805192835290151560208301520161011b565b610142610347565b61010e6040518060400160405280600981526020017f544553542056302e36000000000000000000000000000000000000000000000081525081565b600054610100900473ffffffffffffffffffffffffffffffffffffffff1660405173ffffffffffffffffffffffffffffffffffffffff909116815260200161011b565b610157610201366004611245565b610359565b61020e610366565b60405161011b919061135b565b61010e6102293660046113a2565b610403565b61010e6040517f010000000000000000000000000000000000000000000000000000000000000060208201527f120000000000000000000000000000000000000000000000000000000000000060218201527f1100000000000000000000000000000000000000000000000000000000000000602282015260230160405160208183030381529060405281565b6101426102c93660046113bf565b610417565b905090565b6102db610480565b6102f06102ea60005460ff1690565b156104d9565b565b60008054819060ff16610331576040517f6d39fcd000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61033b8484610532565b915091505b9250929050565b61034f610480565b6102f060006105c6565b60008061033b8484610643565b6040517f010000000000000000000000000000000000000000000000000000000000000060208201527f120000000000000000000000000000000000000000000000000000000000000060218201527f110000000000000000000000000000000000000000000000000000000000000060228201526060906023016040516020818303038152906040528060200190518101906102ce91906113dc565b60606104118260ff1661068f565b92915050565b61041f610480565b73ffffffffffffffffffffffffffffffffffffffff8116610474576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024015b60405180910390fd5b61047d816105c6565b50565b60005473ffffffffffffffffffffffffffffffffffffffff6101009091041633146102f0576040517f118cdaa700000000000000000000000000000000000000000000000000000000815233600482015260240161046b565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016821515908117825560405190917fbdf1a3ee1d5eb15aa60ae1a81488107759732ead44999c8c807575100def058b91a250565b6040820151600090819060ff811661054a5750610340565b600160ff82160361056d576105638486600001516107a0565b9250925050610340565b601160ff821603610586576105638486600001516108ea565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee60ff8216016105be57610563848660000151610921565b509250929050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381166101008181027fffffffffffffffffffffff0000000000000000000000000000000000000000ff851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b600080601160ff16846040015160ff161161066f57610666838560000151610bea565b91509150610340565b601260ff16846040015160ff160361034057610666838560000151610c0d565b606060ff82166106d257505060408051808201909152600a81527f4e6f742041637469766500000000000000000000000000000000000000000000602082015290565b60ff821660010361071657505060408051808201909152601581527f466f7277617264205265696e766573742056302e320000000000000000000000602082015290565b60ff821660120361075a57505060408051808201909152601081527f41617665205633205265696e7665737400000000000000000000000000000000602082015290565b60ff821660110361079b575060408051808201909152601481527f436f6d706f756e64205633205265696e7665737400000000000000000000000060208201525b919050565b60008060006107ae84610ce2565b604081015190915073ffffffffffffffffffffffffffffffffffffffff1661083c57806020015173ffffffffffffffffffffffffffffffffffffffff168560405160006040518083038185875af1925050503d806000811461082c576040519150601f19603f3d011682016040523d82523d6000602084013e610831565b606091505b5050809250506108e2565b604080820151602083015191517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff92831660048201526024810188905291169063a9059cbb906044016020604051808303816000875af11580156108bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108df9190611482565b91505b509293915050565b60008060006108f884610ce2565b905061090d8160000151868360400151610d11565b925082156105be5760019150509250929050565b600080600061092f84610ce2565b60408082015190517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015291925060009173ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa1580156109a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c9919061149f565b60208301516040517f095ea7b300000000000000000000000000000000000000000000000000000000815273a238dd80c259a72e81d7e4664a9801593f98d1c560048201526024810189905291925060009173ffffffffffffffffffffffffffffffffffffffff9091169063095ea7b3906044016020604051808303816000875af1158015610a5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a809190611482565b90508015610be05760208301516040517f617ba03700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602481018890523060448201526000606482015273a238dd80c259a72e81d7e4664a9801593f98d1c59063617ba03790608401600060405180830381600087803b158015610b1d57600080fd5b505af1158015610b31573d6000803e3d6000fd5b5050505060408381015190517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009173ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa158015610ba6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bca919061149f565b9050610bd683826114b8565b9550600086119450505b5050509250929050565b6000806000610bf884610ce2565b905061090d8160000151868360400151610f03565b6000806000610c1b84610ce2565b60208101516040517f69328dec00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911660048201526024810187905230604482015290915073a238dd80c259a72e81d7e4664a9801593f98d1c5906369328dec906064016020604051808303816000875af1158015610cb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd5919061149f565b9586151595509350505050565b60408051606081018252600080825260208083018290529282015282519091610411918401810190840161156a565b600080610d1d85610fc5565b90506000610d2a8261102f565b6040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301526024820188905291925060009186169063095ea7b3906044016020604051808303816000875af1158015610da5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc99190611482565b905080610e58576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4443414163636f756e74203a205b436f6d706f756e64205265696e766573745d60448201527f202d20417070726f76616c206661696c65640000000000000000000000000000606482015260840161046b565b6040517ff2b9fdb800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86811660048301526024820188905284169063f2b9fdb890604401600060405180830381600087803b158015610ec857600080fd5b505af1158015610edc573d6000803e3d6000fd5b505050506000610eeb8461102f565b9050610ef783826114b8565b98975050505050505050565b600080610f0f85610fc5565b90506000610f1c8261102f565b6040517ff3fef3a300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8681166004830152602482018890529192509083169063f3fef3a390604401600060405180830381600087803b158015610f9057600080fd5b505af1158015610fa4573d6000803e3d6000fd5b50505050610fb18261102f565b610fbb90826114b8565b9695505050505050565b600060ff8216610fea57507346e6b214b524310239732d51387075e0e70970bf919050565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60ff83160161079b575073b125e6687d4313864e53df431d5425969c15eb2f919050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa15801561109c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610411919061149f565b6000815180845260005b818110156110e6576020818501810151868301820152016110ca565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b60208152600061113760208301846110c0565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516080810167ffffffffffffffff811182821017156111905761119061113e565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156111dd576111dd61113e565b604052919050565b801515811461047d57600080fd5b803561079b816111e5565b60ff8116811461047d57600080fd5b803561079b816111fe565b73ffffffffffffffffffffffffffffffffffffffff8116811461047d57600080fd5b803561079b81611218565b6000806040838503121561125857600080fd5b823567ffffffffffffffff8082111561127057600080fd5b908401906080828703121561128457600080fd5b61128c61116d565b82358281111561129b57600080fd5b8301601f810188136112ac57600080fd5b80356020848211156112c0576112c061113e565b6112f0817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f85011601611196565b9450818552898183850101111561130657600080fd5b818184018287013760008183870101528484526113248187016111f3565b818501526113346040870161120d565b60408501526113456060870161123a565b6060850152929997909201359750505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561139657835160ff1683529284019291840191600101611377565b50909695505050505050565b6000602082840312156113b457600080fd5b8135611137816111fe565b6000602082840312156113d157600080fd5b813561113781611218565b600060208083850312156113ef57600080fd5b825167ffffffffffffffff8082111561140757600080fd5b818501915085601f83011261141b57600080fd5b81518181111561142d5761142d61113e565b8060051b915061143e848301611196565b818152918301840191848101908884111561145857600080fd5b938501935b83851015610ef75784519250611472836111fe565b828252938501939085019061145d565b60006020828403121561149457600080fd5b8151611137816111e5565b6000602082840312156114b157600080fd5b5051919050565b81810381811115610411577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006060828403121561150457600080fd5b6040516060810181811067ffffffffffffffff821117156115275761152761113e565b8060405250809150825161153a816111fe565b8152602083015161154a81611218565b6020820152604083015161155d81611218565b6040919091015292915050565b60006060828403121561157c57600080fd5b61113783836114f256fea26469706673582212204f057b637f797c6f95e460b6a1381e63d9f33079bc31690f7eec173f018eb3b464736f6c63430008140033";

type DCAReinvestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DCAReinvestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DCAReinvest__factory extends ContractFactory {
  constructor(...args: DCAReinvestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    activeLibrary_: boolean,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(activeLibrary_, overrides || {});
  }
  override deploy(
    activeLibrary_: boolean,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(activeLibrary_, overrides || {}) as Promise<
      DCAReinvest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DCAReinvest__factory {
    return super.connect(runner) as DCAReinvest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCAReinvestInterface {
    return new Interface(_abi) as DCAReinvestInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DCAReinvest {
    return new Contract(address, _abi, runner) as unknown as DCAReinvest;
  }
}
