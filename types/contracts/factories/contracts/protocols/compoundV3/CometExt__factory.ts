/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  CometExt,
  CometExtInterface,
  CometConfiguration,
} from "../../../../contracts/protocols/compoundV3/CometExt";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "name32",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "symbol32",
            type: "bytes32",
          },
        ],
        internalType: "struct CometConfiguration.ExtConfiguration",
        name: "config",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BadAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "BadNonce",
    type: "error",
  },
  {
    inputs: [],
    name: "BadSignatory",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInt104",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInt256",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidUInt104",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidUInt128",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidUInt64",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidValueS",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidValueV",
    type: "error",
  },
  {
    inputs: [],
    name: "NegativeNumber",
    type: "error",
  },
  {
    inputs: [],
    name: "SignatureExpired",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "manager",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isAllowed_",
        type: "bool",
      },
    ],
    name: "allow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "manager",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isAllowed_",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "allowBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "baseAccrualScale",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "baseIndexScale",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "baseTrackingAccrued",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "collateralBalanceOf",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factorScale",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "manager",
        type: "address",
      },
    ],
    name: "hasPermission",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "liquidatorPoints",
    outputs: [
      {
        internalType: "uint32",
        name: "numAbsorbs",
        type: "uint32",
      },
      {
        internalType: "uint64",
        name: "numAbsorbed",
        type: "uint64",
      },
      {
        internalType: "uint128",
        name: "approxSpend",
        type: "uint128",
      },
      {
        internalType: "uint32",
        name: "_reserved",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxAssets",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceScale",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalsBasic",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "baseSupplyIndex",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "baseBorrowIndex",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "trackingSupplyIndex",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "trackingBorrowIndex",
            type: "uint64",
          },
          {
            internalType: "uint104",
            name: "totalSupplyBase",
            type: "uint104",
          },
          {
            internalType: "uint104",
            name: "totalBorrowBase",
            type: "uint104",
          },
          {
            internalType: "uint40",
            name: "lastAccrualTime",
            type: "uint40",
          },
          {
            internalType: "uint8",
            name: "pauseFlags",
            type: "uint8",
          },
        ],
        internalType: "struct CometStorage.TotalsBasic",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "totalsCollateral",
    outputs: [
      {
        internalType: "uint128",
        name: "totalSupplyAsset",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_reserved",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userBasic",
    outputs: [
      {
        internalType: "int104",
        name: "principal",
        type: "int104",
      },
      {
        internalType: "uint64",
        name: "baseTrackingIndex",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "baseTrackingAccrued",
        type: "uint64",
      },
      {
        internalType: "uint16",
        name: "assetsIn",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "_reserved",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userCollateral",
    outputs: [
      {
        internalType: "uint128",
        name: "balance",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_reserved",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b5060405161158538038061158583398101604081905261002f91610040565b80516080526020015160a05261009c565b60006040828403121561005257600080fd5b604080519081016001600160401b038111828210171561008257634e487b7160e01b600052604160045260246000fd5b604052825181526020928301519281019290925250919050565b60805160a0516114b66100cf600039600081816109920152610a560152600081816107b6015261087a01526114b66000f3fe608060405234801561001057600080fd5b50600436106101825760003560e01c806396e7a9c1116100d8578063b9f0baf71161008c578063cde6804111610066578063cde680411461068f578063dc4abafd146106a2578063dd62ed3e1461079057600080fd5b8063b9f0baf714610467578063bb24d994146105b1578063c5fa15cf146105c457600080fd5b8063a1654379116100bd578063a1654379146103d7578063a20ed59614610405578063ab9ba7f41461040e57600080fd5b806396e7a9c1146103c2578063a0fbddaf146103cf57600080fd5b80632e04b8e71161013a5780635c2549ee116101145780635c2549ee1461033257806394b2294b146103ab57806395d89b41146103ba57600080fd5b80632e04b8e71461027e57806354fd4d50146102ac57806359e017bd146102e857600080fd5b80630f21d96b1161016b5780630f21d96b146101c8578063110496e5146101eb5780632b92a07d1461020057600080fd5b806306fdde0314610187578063095ea7b3146101a5575b600080fd5b61018f6107a3565b60405161019c9190611078565b60405180910390f35b6101b86101b336600461110d565b610904565b604051901515815260200161019c565b670de0b6b3a76400005b60405167ffffffffffffffff909116815260200161019c565b6101fe6101f9366004611147565b610970565b005b61025561020e36600461117a565b60066020908152600092835260408084209091529082529020546fffffffffffffffffffffffffffffffff8082169170010000000000000000000000000000000090041682565b604080516fffffffffffffffffffffffffffffffff93841681529290911660208301520161019c565b61029e61028c3660046111a4565b60046020526000908152604090205481565b60405190815260200161019c565b61018f6040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525081565b6102556102f63660046111a4565b6002602052600090815260409020546fffffffffffffffffffffffffffffffff8082169170010000000000000000000000000000000090041682565b61038a61034036600461117a565b73ffffffffffffffffffffffffffffffffffffffff91821660009081526006602090815260408083209390941682529190915220546fffffffffffffffffffffffffffffffff1690565b6040516fffffffffffffffffffffffffffffffff909116815260200161019c565b604051600f815260200161019c565b61018f61097f565b66038d7ea4c680006101d2565b6101d2610ad9565b6101b86103e536600461117a565b600360209081526000928352604080842090915290825290205460ff1681565b620f42406101d2565b6101d261041c3660046111a4565b73ffffffffffffffffffffffffffffffffffffffff166000908152600560205260409020547501000000000000000000000000000000000000000000900467ffffffffffffffff1690565b6105a46040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915250604080516101008101825260005467ffffffffffffffff80821683526801000000000000000082048116602084015270010000000000000000000000000000000082048116938301939093527801000000000000000000000000000000000000000000000000900490911660608201526001546cffffffffffffffffffffffffff80821660808401526d010000000000000000000000000082041660a08301527a010000000000000000000000000000000000000000000000000000810464ffffffffff1660c08301527f0100000000000000000000000000000000000000000000000000000000000000900460ff1660e082015290565b60405161019c91906111bf565b6101fe6105bf366004611263565b610aec565b6106446105d23660046111a4565b60076020526000908152604090205463ffffffff8082169167ffffffffffffffff640100000000820416916fffffffffffffffffffffffffffffffff6c01000000000000000000000000830416917c010000000000000000000000000000000000000000000000000000000090041684565b6040805163ffffffff958616815267ffffffffffffffff90941660208501526fffffffffffffffffffffffffffffffff9092169183019190915291909116606082015260800161019c565b6101b861069d36600461117a565b610f3c565b61074f6106b03660046111a4565b600560205260009081526040902054600c81900b9067ffffffffffffffff6d01000000000000000000000000008204811691750100000000000000000000000000000000000000000081049091169061ffff7d0100000000000000000000000000000000000000000000000000000000008204169060ff7f01000000000000000000000000000000000000000000000000000000000000009091041685565b60408051600c9690960b865267ffffffffffffffff9485166020870152929093169184019190915261ffff16606083015260ff16608082015260a00161019c565b61029e61079e36600461117a565b610fb1565b606060005b60208160ff16101561081c577f00000000000000000000000000000000000000000000000000000000000000008160ff16602081106107e9576107e96112e6565b1a60f81b7fff00000000000000000000000000000000000000000000000000000000000000161561081c576001016107a8565b60008160ff1667ffffffffffffffff81111561083a5761083a611315565b6040519080825280601f01601f191660200182016040528015610864576020820181803683370190505b50905060005b8260ff168160ff1610156108fd577f00000000000000000000000000000000000000000000000000000000000000008160ff16602081106108ad576108ad6112e6565b1a60f81b828260ff16815181106108c6576108c66112e6565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060010161086a565b5092915050565b600060001982036109205761091b33846001610fd2565b610966565b816000036109345761091b33846000610fd2565b6040517f749b593900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060015b92915050565b61097b338383610fd2565b5050565b606060005b60208160ff1610156109f8577f00000000000000000000000000000000000000000000000000000000000000008160ff16602081106109c5576109c56112e6565b1a60f81b7fff0000000000000000000000000000000000000000000000000000000000000016156109f857600101610984565b60008160ff1667ffffffffffffffff811115610a1657610a16611315565b6040519080825280601f01601f191660200182016040528015610a40576020820181803683370190505b50905060005b8260ff168160ff1610156108fd577f00000000000000000000000000000000000000000000000000000000000000008160ff1660208110610a8957610a896112e6565b1a60f81b828260ff1681518110610aa257610aa26112e6565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600101610a46565b6000610ae76008600a611457565b905090565b7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0811115610b46576040517fed9a019500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8260ff16601b14158015610b5e57508260ff16601c14155b15610b95576040517f9c5b7fcf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f610bc06107a3565b8051602091820120604080518082018252600181527f300000000000000000000000000000000000000000000000000000000000000090840152805180840194909452838101919091527f044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d60608401524660808401523060a0808501919091528151808503909101815260c0840182528051908301207fab8e80cad03d9def1f2f6f14831e15fd29eb88f59ac40032be3f8047b5ee33ed60e085015273ffffffffffffffffffffffffffffffffffffffff8d81166101008601528c166101208501528a151561014085015261016084018a90526101808085018a9052825180860390910181526101a08501909252815191909201207f19010000000000000000000000000000000000000000000000000000000000006101c08401526101c283018290526101e283018190529092509060009061020201604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600080855291840180845281905260ff8a169284019290925260608301889052608083018790529092509060019060a0016020604051602081039080840390855afa158015610da0573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116610e18576040517f40622f2c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff1614610e7d576040517f40622f2c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff81166000908152600460205260408120805491610eae83611466565b919050558914610eea576040517f4bd574ec00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b874210610f23576040517f0819bdcd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f2e818c8c610fd2565b505050505050505050505050565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161480610faa575073ffffffffffffffffffffffffffffffffffffffff80841660009081526003602090815260408083209386168352929052205460ff165b9392505050565b6000610fbd8383610f3c565b610fc8576000610faa565b5060001992915050565b73ffffffffffffffffffffffffffffffffffffffff838116600081815260036020908152604080832094871680845294909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168415151790557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258361105e576000611062565b6000195b60405190815260200160405180910390a3505050565b600060208083528351808285015260005b818110156110a557858101830151858201604001528201611089565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461110857600080fd5b919050565b6000806040838503121561112057600080fd5b611129836110e4565b946020939093013593505050565b8035801515811461110857600080fd5b6000806040838503121561115a57600080fd5b611163836110e4565b915061117160208401611137565b90509250929050565b6000806040838503121561118d57600080fd5b611196836110e4565b9150611171602084016110e4565b6000602082840312156111b657600080fd5b610faa826110e4565b60006101008201905067ffffffffffffffff808451168352806020850151166020840152806040850151166040840152806060850151166060840152506cffffffffffffffffffffffffff608084015116608083015260a083015161123560a08401826cffffffffffffffffffffffffff169052565b5060c083015161124e60c084018264ffffffffff169052565b5060e08301516108fd60e084018260ff169052565b600080600080600080600080610100898b03121561128057600080fd5b611289896110e4565b975061129760208a016110e4565b96506112a560408a01611137565b9550606089013594506080890135935060a089013560ff811681146112c957600080fd5b979a969950949793969295929450505060c08201359160e0013590565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600181815b808511156113ae57816000190482111561139457611394611344565b808516156113a157918102915b93841c9390800290611378565b509250929050565b6000826113c55750600161096a565b816113d25750600061096a565b81600181146113e857600281146113f25761140e565b600191505061096a565b60ff84111561140357611403611344565b50506001821b61096a565b5060208310610133831016604e8410600b8410161715611431575081810a61096a565b61143b8383611373565b806000190482111561144f5761144f611344565b029392505050565b6000610faa60ff8416836113b6565b6000600019820361147957611479611344565b506001019056fea2646970667358221220b97490b6aa9cb274c286b8c7911a0460ccf6096f6148871edc10ebf24e6a36f064736f6c63430008140033";

type CometExtConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CometExtConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CometExt__factory extends ContractFactory {
  constructor(...args: CometExtConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    config: CometConfiguration.ExtConfigurationStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(config, overrides || {});
  }
  override deploy(
    config: CometConfiguration.ExtConfigurationStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(config, overrides || {}) as Promise<
      CometExt & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CometExt__factory {
    return super.connect(runner) as CometExt__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CometExtInterface {
    return new Interface(_abi) as CometExtInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): CometExt {
    return new Contract(address, _abi, runner) as unknown as CometExt;
  }
}
